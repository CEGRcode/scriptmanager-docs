"use strict";(self.webpackChunkscriptmanager_docs=self.webpackChunkscriptmanager_docs||[]).push([[9894],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),u=n,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1946:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={id:"sort-bam",title:"Sort BAM",sidebar_label:"Sort BAM"},i=void 0,s={unversionedId:"Tools/bam-manipulation/sort-bam",id:"Tools/bam-manipulation/sort-bam",title:"Sort BAM",description:"sort-bam",source:"@site/docs/Tools/bam-manipulation/sort-bam.md",sourceDirName:"Tools/bam-manipulation",slug:"/Tools/bam-manipulation/sort-bam",permalink:"/scriptmanager-docs/docs/Tools/bam-manipulation/sort-bam",draft:!1,tags:[],version:"current",lastUpdatedBy:"owlang",lastUpdatedAt:1689706621,formattedLastUpdatedAt:"Jul 18, 2023",frontMatter:{id:"sort-bam",title:"Sort BAM",sidebar_label:"Sort BAM"},sidebar:"toolSidebar",previous:{title:"Merge BAM",permalink:"/scriptmanager-docs/docs/Tools/bam-manipulation/merge-bam"},next:{title:"BAM Statistics",permalink:"/scriptmanager-docs/docs/Tools/bam-statistics/"}},l={},p=[{value:"File inputs (BAM)",id:"file-inputs-bam",level:3},{value:"Output (BAM)",id:"output-bam",level:3},{value:"Command Line Interface (Picard and Samtools)",id:"command-line-interface-picard-and-samtools",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(m,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"sort-bam",src:r(3115).Z,width:"103",height:"103"})),(0,n.kt)("p",null,"Sort BAM files in order to efficiently extract and manipulate. RAM intensive process. If program freezes, increase JAVA heap size."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Many bioinformatic files require sorting BAM files so that they can be ",(0,n.kt)("a",{parentName:"p",href:"/docs/Tools/bam-manipulation/bam-indexer"},"indexed")," and efficiently parsed. It is good practice to keep your BAM files sorted.")),(0,n.kt)("img",{src:r(2188).Z,style:{width:"70%"}}),(0,n.kt)("h3",{id:"file-inputs-bam"},"File inputs (BAM)"),(0,n.kt)("p",null,"Make sure your inputs are properly formatted and use the appropriate ",(0,n.kt)("inlineCode",{parentName:"p"},".bam")," extension. This script also supports bulk selection and processing of files."),(0,n.kt)("h3",{id:"output-bam"},"Output (BAM)"),(0,n.kt)("p",null,"The sorted output BAM files are named based on the input filenames. The ",(0,n.kt)("inlineCode",{parentName:"p"},"_sorted.bam")," suffix is used for each output. For example, for a given ",(0,n.kt)("inlineCode",{parentName:"p"},"XXX.bam")," input file, a new ",(0,n.kt)("inlineCode",{parentName:"p"},"XXX_sorted.bam")," file will be written to the user-selected output directory."),(0,n.kt)("h2",{id:"command-line-interface-picard-and-samtools"},"Command Line Interface (Picard and Samtools)"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"CommandLine tools already exist for this function. This tool only exists as a GUI wrapper in ScriptManager.")),(0,n.kt)("p",null,"Please see the ",(0,n.kt)("a",{parentName:"p",href:"http://www.htslib.org/doc/samtools-sort.html"},"Samtools sort tool")," or the ",(0,n.kt)("a",{parentName:"p",href:"https://broadinstitute.github.io/picard/command-line-overview.html#SortSam"},"Picard SortSam tool"),"."))}d.isMDXComponent=!0},2188:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/SortBAMWindow-5160dbda71c3e50a774e89a483c969c2.png"},3115:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/BAMFileSort_square-b37dab18b5f06540d40d06c5a721281b.svg"}}]);