"use strict";(self.webpackChunkscriptmanager_docs=self.webpackChunkscriptmanager_docs||[]).push([[3958],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>b});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},u="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),u=d(a),c=r,b=u["".concat(p,".").concat(c)]||u[c]||s[c]||o;return a?n.createElement(b,i(i({ref:e},m),{},{components:a})):n.createElement(b,i({ref:e},m))}));function b(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[u]="string"==typeof t?t:r,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8364:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const o={id:"bam-to-bedgraph",title:"BAM to bedGraph",sidebar_label:"BAM to bedGraph"},i=void 0,l={unversionedId:"bam-format-converter/bam-to-bedgraph",id:"bam-format-converter/bam-to-bedgraph",title:"BAM to bedGraph",description:"bam-to-bedgraph",source:"@site/docs/bam-format-converter/bam-to-bedgraph.md",sourceDirName:"bam-format-converter",slug:"/bam-format-converter/bam-to-bedgraph",permalink:"/scriptmanager-docs/docs/bam-format-converter/bam-to-bedgraph",draft:!1,tags:[],version:"current",lastUpdatedBy:"Courtney LeSon",lastUpdatedAt:1687360169,formattedLastUpdatedAt:"Jun 21, 2023",frontMatter:{id:"bam-to-bedgraph",title:"BAM to bedGraph",sidebar_label:"BAM to bedGraph"},sidebar:"toolSidebar",previous:{title:"BAM to BED",permalink:"/scriptmanager-docs/docs/bam-format-converter/bam-to-bed"},next:{title:"BAM Indexer",permalink:"/scriptmanager-docs/docs/bam-manipulation/bam-indexer"}},p={},d=[{value:"Read Options",id:"read-options",level:3},{value:"Command Line Interface",id:"command-line-interface",level:2},{value:"Positional Input",id:"positional-input",level:3},{value:"Output Options",id:"output-options",level:3},{value:"Filter Options",id:"filter-options",level:3},{value:"Read Options",id:"read-options-1",level:3}],m={toc:d},u="wrapper";function s(t){let{components:e,...o}=t;return(0,r.kt)(u,(0,n.Z)({},m,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bam-to-bedgraph",src:a(4417).Z,width:"103",height:"103"})),(0,r.kt)("p",null,"Convert BAM file to bedGraph file"),(0,r.kt)("img",{src:a(1334).Z,style:{width:"70%"}}),(0,r.kt)("h3",{id:"read-options"},"Read Options"),(0,r.kt)("p",null,"This tool has multiple read options to output."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Read 1"),": output Read 1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Read 2"),": output Read 2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Combined"),": output combined reads"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Midpoint"),": output the midpoint between reads")),(0,r.kt)("p",null,"Note: The ",(0,r.kt)("strong",{parentName:"p"},"Midpoint")," option requires proper mate-pair reading."),(0,r.kt)("h2",{id:"command-line-interface"},"Command Line Interface"),(0,r.kt)("p",null,"Usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"java -jar ScriptManager.jar bam-format-converter bam-to-bedgraph [-1 | -2 | -a | -m]\n[-hpV] [-n=<MIN_INSERT>] [-o=<outputBasename>] [-x=<MAX_INSERT>]\n<bamFile>\n")),(0,r.kt)("h3",{id:"positional-input"},"Positional Input"),(0,r.kt)("p",null,"This tool takes a single BAM file for input. As with other tools, this tool requires the BAM file be indexed."),(0,r.kt)("h3",{id:"output-options"},"Output Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-o, --output=<outputBasename>")),(0,r.kt)("td",{parentName:"tr",align:null},"specify output directory (name will be same as original with ",(0,r.kt)("inlineCode",{parentName:"td"},"_<strand>.bedgraph")," ext)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-s, --stdout")),(0,r.kt)("td",{parentName:"tr",align:null},"stream output file to STDOUT (cannot be used with ",(0,r.kt)("inlineCode",{parentName:"td"},"-o")," flag)")))),(0,r.kt)("h3",{id:"filter-options"},"Filter Options"),(0,r.kt)("p",null,"These filter options are shared across all the BAM Format Converter tools."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-p, --mate-pair")),(0,r.kt)("td",{parentName:"tr",align:null},"require proper mate pair (default not required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-n, --min-insert=<MIN_INSERT>")),(0,r.kt)("td",{parentName:"tr",align:null},"filter by min insert size in bp")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-x, --max-insert=<MAX_INSERT>")),(0,r.kt)("td",{parentName:"tr",align:null},"filter by max insert size in bp")))),(0,r.kt)("h3",{id:"read-options-1"},"Read Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-1, --read1")),(0,r.kt)("td",{parentName:"tr",align:null},"output read 1 (default)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-2, --read2")),(0,r.kt)("td",{parentName:"tr",align:null},"output read 2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-a, --all-reads")),(0,r.kt)("td",{parentName:"tr",align:null},"output combined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-m, --midpoint")),(0,r.kt)("td",{parentName:"tr",align:null},"output midpoint (require PE)")))))}s.isMDXComponent=!0},1334:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/BAMtobedGraphWindow-3f148951ebeb7cf42ded60174ecee353.png"},4417:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/BAMtobedGraph_square-9da0604bf5d36afdd2cd3f584bb78229.svg"}}]);