"use strict";(self.webpackChunkscriptmanager_docs=self.webpackChunkscriptmanager_docs||[]).push([[8677],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>f});var i=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),s=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),g=r,f=u["".concat(l,".").concat(g)]||u[g]||d[g]||o;return t?i.createElement(f,a(a({ref:n},c),{},{components:t})):i.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=g;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[u]="string"==typeof e?e:r,a[1]=p;for(var s=2;s<o;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},1897:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var i=t(8168),r=(t(6540),t(5680));const o={id:"code-snippets",title:"Useful Code Snippets",sidebar_label:"Useful Code Snippets"},a=void 0,p={unversionedId:"Guides/Contributing/code-snippets",id:"Guides/Contributing/code-snippets",title:"Useful Code Snippets",description:"scripts package",source:"@site/docs/Guides/Contributing/code-snippets.md",sourceDirName:"Guides/Contributing",slug:"/Guides/Contributing/code-snippets",permalink:"/scriptmanager-docs/docs/Guides/Contributing/code-snippets",draft:!1,tags:[],version:"current",lastUpdatedBy:"owlang",lastUpdatedAt:1689732185,formattedLastUpdatedAt:"Jul 19, 2023",frontMatter:{id:"code-snippets",title:"Useful Code Snippets",sidebar_label:"Useful Code Snippets"},sidebar:"generalSidebar",previous:{title:"General Developer Notes",permalink:"/scriptmanager-docs/docs/Guides/Contributing/developer-guidelines"},next:{title:"Testing",permalink:"/scriptmanager-docs/docs/Guides/Contributing/testing"}},l={},s=[{value:"<code>scripts</code> package",id:"scripts-package",level:2},{value:"Initializing optionally gzipped writers",id:"initializing-optionally-gzipped-writers",level:3},{value:"Parsing optionally gzipped inputs",id:"parsing-optionally-gzipped-inputs",level:3},{value:"UI snippets",id:"ui-snippets",level:2},{value:"Color Selection Button",id:"color-selection-button",level:3},{value:"JavaDocs snippets",id:"javadocs-snippets",level:2},{value:"cli class",id:"cli-class",level:3},{value:"Window class",id:"window-class",level:3},{value:"script class",id:"script-class",level:3}],c={toc:s},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,i.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"scripts-package"},(0,r.yg)("inlineCode",{parentName:"h2"},"scripts")," package"),(0,r.yg)("p",null,"Set of snippets you will often find in the ",(0,r.yg)("inlineCode",{parentName:"p"},"scripts")," package."),(0,r.yg)("h3",{id:"initializing-optionally-gzipped-writers"},"Initializing optionally gzipped writers"),(0,r.yg)("p",null,"Given an output file path and a boolean storing information on gzipping the output, an appropriate BufferedOutputStream (for efficient I/O access) is instantiated while if the"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"File outpath;\nboolean gzOutput;\n// ...instantiate outpath and gzOutput\n// Initialize output writer\nPrintStream OUT = System.out;\nif (outpath != null) {\n    if (gzOutput) {\n        OUT = new PrintStream(new BufferedOutputStream(new GZIPOutputStream(new FileOutputStream(outpath))));\n    } else {\n        OUT = new PrintStream(new BufferedOutputStream(new FileOutputStream(outpath)));\n    }\n}\n// do stuff\nOUT.close()\n")),(0,r.yg)("h3",{id:"parsing-optionally-gzipped-inputs"},"Parsing optionally gzipped inputs"),(0,r.yg)("p",null,"Checks if input file is gzipped or not, then creates appropriate BufferedReader (for efficient I/O access), and loops through each line with tab-delimited tokenization."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},'File input;\n// ...instantiate input\n// Check if file is gzipped and instantiate appropriate BufferedReader\nBufferedReader br;\nif(GZipUtilities.isGZipped(input)) {\n    br = new BufferedReader(new InputStreamReader(new GZIPInputStream(new FileInputStream(input)), "UTF-8"));\n} else {\n    br = new BufferedReader(new InputStreamReader(new FileInputStream(input), "UTF-8"));\n}\n// Initialize line variable to loop through\nString line = br.readLine();\nwhile (line != null) {\n    String[] temp = line.split("\\t");\n    // do stuff\n    line = br.readLine();\n}\nbr.close()\n')),(0,r.yg)("h2",{id:"ui-snippets"},"UI snippets"),(0,r.yg)("p",null,"Set of snippets you will often find in the ",(0,r.yg)("inlineCode",{parentName:"p"},"window_interface")," package."),(0,r.yg)("h3",{id:"color-selection-button"},"Color Selection Button"),(0,r.yg)("p",null,"Creates ",(0,r.yg)("inlineCode",{parentName:"p"},"JButton")," object that instantiates a ",(0,r.yg)("inlineCode",{parentName:"p"},"JColorChooser")," dialog when clicked. When the user selects a color, the ",(0,r.yg)("inlineCode",{parentName:"p"},"setForeground")," method is called to set the text color of the JButton object to match the color selected by  the user."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'import java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport javax.swing.JButton;\nimport javax.swing.JColorChooser;\n// ...\nbtnSenseColor = new JButton("Sense Color");\n// format the position of the button\n//  e.g.\n//   sl_contentPane.putConstraint(...args...);\nbtnSenseColor.addActionListener(new ActionListener() {\n    public void actionPerformed(ActionEvent arg0) {\n        btnSenseColor.setForeground(JColorChooser.showDialog(btnSenseColor, "Select an Output Color",\n                btnSenseColor.getForeground()));\n    }\n});\nbtnSenseColor.setForeground(new Color(0, 0, 255));\ncontentPane.add(btnSenseColor);\n')),(0,r.yg)("h2",{id:"javadocs-snippets"},"JavaDocs snippets"),(0,r.yg)("h3",{id:"cli-class"},"cli class"),(0,r.yg)("p",null,"Template for the ",(0,r.yg)("inlineCode",{parentName:"p"},"cli.*.*CLI")," class doc."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/**\n * Command line interface class for _______________ by calling the methods implemented in the scripts package.\n *\n * @author First Last\n * @see scripts.<ToolGroup>.<ToolScript>\n */\n")),(0,r.yg)("h3",{id:"window-class"},"Window class"),(0,r.yg)("p",null,"Template for the ",(0,r.yg)("inlineCode",{parentName:"p"},"window_interface.*.*Window")," class doc."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/**\n * Graphical interface window for _______________ by calling the methods implemented in the scripts package.\n *\n * @author First Last\n * @see scripts.<ToolGroup>.<ToolScript>\n */\n")),(0,r.yg)("p",null,"Template for the ",(0,r.yg)("inlineCode",{parentName:"p"},"Task")," subclass within the ",(0,r.yg)("inlineCode",{parentName:"p"},"window_interface.*.*Window")," class."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"    /**\n     * Organize user inputs for calling script.\n     */\n")),(0,r.yg)("p",null,"Template for the ",(0,r.yg)("inlineCode",{parentName:"p"},"JFrame")," window component design and instantiation within the ",(0,r.yg)("inlineCode",{parentName:"p"},"window_interface.*.*Window")," class."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"    /**\n     * Instantiate window with graphical interface design.\n     */\n")),(0,r.yg)("h3",{id:"script-class"},"script class"),(0,r.yg)("p",null,"Template for the ",(0,r.yg)("inlineCode",{parentName:"p"},"scripts.*.*")," class doc."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"    /**\n     * This class contains scripts for __________________.\n     *\n     * @author First Last\n     * @see cli.<ToolGroup>.<ToolName>CLI\n     * @see window_interface.<ToolGroup>.<ToolName>Window\n     */\n")))}d.isMDXComponent=!0}}]);