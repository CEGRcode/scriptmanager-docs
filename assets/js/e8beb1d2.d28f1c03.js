"use strict";(self.webpackChunkscriptmanager_docs=self.webpackChunkscriptmanager_docs||[]).push([[5510],{5680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>m});var n=a(6540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),c=i,m=u["".concat(s,".").concat(c)]||u[c]||g[c]||r;return a?n.createElement(m,l(l({ref:t},d),{},{components:a})):n.createElement(m,l({ref:t},d))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6110:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(8168),i=(a(6540),a(5680));const r={id:"dna-shape-fasta",title:"DNA Shape from FASTA File",sidebar_label:"dna-shape-fasta"},l=void 0,o={unversionedId:"Tools/sequence-analysis/dna-shape-fasta",id:"Tools/sequence-analysis/dna-shape-fasta",title:"DNA Shape from FASTA File",description:"dna-shape-fasta",source:"@site/docs/Tools/sequence-analysis/dna-shape-fasta.md",sourceDirName:"Tools/sequence-analysis",slug:"/Tools/sequence-analysis/dna-shape-fasta",permalink:"/scriptmanager-docs/docs/Tools/sequence-analysis/dna-shape-fasta",draft:!1,tags:[],version:"current",lastUpdatedBy:"Olivia Wen-Mei Lang",lastUpdatedAt:1723841932,formattedLastUpdatedAt:"Aug 16, 2024",frontMatter:{id:"dna-shape-fasta",title:"DNA Shape from FASTA File",sidebar_label:"dna-shape-fasta"},sidebar:"toolSidebar",previous:{title:"dna-shape-bed",permalink:"/scriptmanager-docs/docs/Tools/sequence-analysis/dna-shape-bed"},next:{title:"fasta-extract",permalink:"/scriptmanager-docs/docs/Tools/sequence-analysis/fasta-extract"}},s={},p=[{value:"File inputs (FASTA)",id:"file-inputs-fasta",level:3},{value:"File Options",id:"file-options",level:3},{value:"Output file (CDT/TAB)",id:"output-file-cdttab",level:3},{value:"Output composites (GUI only)",id:"output-composites-gui-only",level:3},{value:"Shape Options",id:"shape-options",level:3},{value:"Positional Input",id:"positional-input",level:3},{value:"Output Options",id:"output-options",level:3},{value:"Shape Options",id:"shape-options-1",level:3}],d={toc:p},u="wrapper";function g(e){let{components:t,...r}=e;return(0,i.yg)(u,(0,n.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"dna-shape-fasta",src:a(1809).A,width:"103",height:"103"})),(0,i.yg)("p",null,"Calculate intrinsic DNA shape parameters given input FASTA files. Based on Roh's lab DNAshape server data."),(0,i.yg)("p",null,"Based on the findings from the Rohs lab ",(0,i.yg)("a",{parentName:"p",href:"https://pubmed.ncbi.nlm.nih.gov/23703209/"},"(Zhou et al, 2013)"),", a sliding window approach using a 5bp wide window is a strong predictor of local DNA shape. Using this approach, we can predict 4 kinds of DNA shape:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"minor groove width")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"propeller twist")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"helix twist")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("strong",{parentName:"li"},"roll"))),(0,i.yg)("img",{src:a(4492).A,style:{width:"70%"}}),(0,i.yg)("h3",{id:"file-inputs-fasta"},"File inputs (FASTA)"),(0,i.yg)("p",null,"Each input FASTA-formatted set of sequences has an average shape score series calculated for it. Because the shape score is a series corresponding to the bp position, the FASTA sequences input should be positionally linked to some feature and of the same length."),(0,i.yg)("h3",{id:"file-options"},"File Options"),(0,i.yg)("p",null,"The 'Force Strandedness' options ensures that the DNA strand orientation during the analysis is considered. "),(0,i.yg)("h3",{id:"output-file-cdttab"},"Output file (CDT/TAB)"),(0,i.yg)("p",null,"The output matrix files are named based on the input filenames and similarly formatted to the heatmap output from ","[tag-pileup][tag-pileup]",". There should be a file for each shape output selected with a suffix distinguishing them ",(0,i.yg)("inlineCode",{parentName:"p"},"_HelT.cdt"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"_MGW.cdt"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"_PropT.cdt"),", and ",(0,i.yg)("inlineCode",{parentName:"p"},"_Roll.cdt"),"). "),(0,i.yg)("h3",{id:"output-composites-gui-only"},"Output composites (GUI only)"),(0,i.yg)("p",null,"The average composites of the CDT output will be displayed in the GUI output window:"),(0,i.yg)("div",{class:"tutorial-img-flow-container"},(0,i.yg)("img",{src:a(8386).A,style:{width:"50%"}}),(0,i.yg)("img",{src:a(9483).A,style:{width:"50%"}})),(0,i.yg)("h3",{id:"shape-options"},"Shape Options"),(0,i.yg)("p",null,"For each shape option to calculate indicated by the command, a ",(0,i.yg)("a",{parentName:"p",href:"/docs/Guides/Getting-Started/file-formats#cdt"},"CDT file")," or TAB file will be generated with an extension indicating the shape type calculated."),(0,i.yg)("p",null,"If the ",(0,i.yg)("em",{parentName:"p"},"groove")," information is indicated in the command to be used for the output, a file called ",(0,i.yg)("inlineCode",{parentName:"p"},"<outputBasename>_MGW.cdt")," will be generated.\nSimilarly for ",(0,i.yg)("em",{parentName:"p"},"propeller"),", ",(0,i.yg)("em",{parentName:"p"},"helical"),", and ",(0,i.yg)("em",{parentName:"p"},"roll"),", the output matrix ",(0,i.yg)("a",{parentName:"p",href:"/docs/Guides/Getting-Started/file-formats#cdt"},"CDT files")," will be named with the suffixes ",(0,i.yg)("inlineCode",{parentName:"p"},"_PTwist.cdt"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"_HTwist.cdt"),", and ",(0,i.yg)("inlineCode",{parentName:"p"},"_Roll.cdt"),", respectively."),(0,i.yg)("h1",{id:"command-line-interface"},"Command Line Interface"),(0,i.yg)("p",null,"Usage:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"java -jar ScriptManager.jar sequence-analysis dna-shape-fasta [-aghlprV]\n[--avg-composite] [-o=<outputBasename>] <fastaFile>\n")),(0,i.yg)("h3",{id:"positional-input"},"Positional Input"),(0,i.yg)("p",null,"Expects a ",(0,i.yg)("a",{parentName:"p",href:"/docs/Guides/Getting-Started/file-formats#fasta"},"FASTA")," formatted file with many sequences to stack up with each other (like ",(0,i.yg)("a",{parentName:"p",href:"/docs/Tools/sequence-analysis/fasta-extract"},"fasta-extract tool")," output)."),(0,i.yg)("h3",{id:"output-options"},"Output Options"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Option"),(0,i.yg)("th",{parentName:"tr",align:null},"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"-o, --output=<outputBasename>")),(0,i.yg)("td",{parentName:"tr",align:null},"Specify output basename (files for each shape indicated will share this base)")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"--avg-composite")),(0,i.yg)("td",{parentName:"tr",align:null},"Save average composite")))),(0,i.yg)("h3",{id:"shape-options-1"},"Shape Options"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Option"),(0,i.yg)("th",{parentName:"tr",align:null},"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"-g, --groove")),(0,i.yg)("td",{parentName:"tr",align:null},"output minor groove width")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"-r, --roll")),(0,i.yg)("td",{parentName:"tr",align:null},"output roll")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"-p, --propeller")),(0,i.yg)("td",{parentName:"tr",align:null},"output propeller twist")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"-l, --helical")),(0,i.yg)("td",{parentName:"tr",align:null},"output helical twist")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"-a, --all")),(0,i.yg)("td",{parentName:"tr",align:null},"output groove, roll, propeller twist, and helical twist, equivalent to ",(0,i.yg)("inlineCode",{parentName:"td"},"-grpl"),".")))))}g.isMDXComponent=!0},8386:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/DNAShapeBED_Chart-Roll-75a006ac106a428e7c87e40cfa35b0ac.png"},9483:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/DNAShapeBED_Statistics-Roll-b7a3aa9f218435dcb72dffa182440d09.png"},4492:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/DNAShapefromFASTAWindow-17a1ae5476edac98961c1ffdd1e2c01c.png"},1809:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/DNAShapefromFASTA_square-505161bf59e87437de5c3dc39914d030.svg"}}]);