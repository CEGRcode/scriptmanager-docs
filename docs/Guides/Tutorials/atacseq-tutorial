---
id: atacseq-tutorial
title: "ATAC-seq Tutorial"
sidebar_label: "ATAC-seq"
---

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';
import Link from '@docusaurus/Link';

_Generating two basic sequence-specific ATAC-seq plots: composite and heatmap_

**Goal:** This tutorial provides a guide to generating 2 basic plots (Composite plot and Heatmap) using the ScriptManager platform and data generated by the [Stanford Encode Project][encode-project].
**CHECK WHICH WEBSITE SHOULD BE USED

<div class="tutorial-img_atacseq-flow-container">
  <img src={require('./img_atacseq/Pugh').default} style={{width:20+'%',}}/>
  <img src={require('./img_atacseq/UCSC_GRCh38_knownGene_GENCODEV3_ALL-TSS_2000bp_5000bp_SORT_treeview.png').default} style={{width:70+'%',}}/>
</div>

## Download ScriptManager (v0.14):
The current version of ScriptManager is available for download **[here][github-v14]**. Make sure you have [Java installed][java-install].

The file `ScriptManager-v0.14.jar` should be placed someplace locally accessible. For example on Mac OS on the Desktop (Permissions will need to be accepted) or someplace in your home directory (`Macintosh_HD:Users/userID/ScriptManager`)


## Download Data

You need one set of genomic coordinate regions to investigate (BED) and one file of sequencing data alignments (BAM) to complete this exercise. [Read more about the BED/BAM file formats here.][file-formats]


### BED File
This is the set of Reb1 binding sites from the [Rossi et al (2018)][rossi-2018].

<Link
  className="button button--secondary"
  href="https://github.com/CEGRcode/2018-Rossi_GenomeResearch/blob/master/Fig1_Reb1/A.Reb1_Rhee_primary_sites_975.bed">
  Download sample BED file
</Link>

<br />
<br />

:::caution
If your BED file downloads with a `.txt` extension, make sure to change the filename to a `.bed` extension. For this tutorial, the BED file is named `Reb1_Rhee_primary_sites_975.bed`.
:::

### BAM File
This is the set of read alignments from the ENCODE Project. [See Rossi et al (2021)][rossi-2021] for more details.

<Link
  className="button button--secondary"
  href="ftp://data1.commons.psu.edu/pub/commons/eberly/pughlab/yeast-epigenome-project/12141_YEP.zip">
  Download sample BAM file
</Link>

OR

<div class="tutorial-img-flow-container">
  <img src={require('./img/download-yep-home.png').default} style={{width:60+'%'}} />
</div>

1. Navigate to [www.encodeproject.com][ENCODE]:https://www.encodeproject.org/files/ENCFF534DCE/

<div class="tutorial-img-flow-container">
  <img src={require('./img/download-yep-reb1.png').default} style={{width:50+'%'}} />
  <img src={require('./img/download-yep-reb1-metadata.png').default} style={{width:50+'%'}} />
</div>

## Generate the Plots

### 1. Open ScriptManager

<Tabs>
  <TabItem value="macos" label="MacOS" default>

Depending on your system permissions, you may need to be an administrator to open this for the first time. On Mac systems, this can be done by right-clicking the file and selecting ‘Open’ at the top.

<div class="tutorial-img-flow-container">
  <img src={require('/static/md-img/General/MacOpenSM.png').default} style={{width:40+'%',border:'solid 1px'}} />
</div>

:::caution
Some MacOS systems may not properly open the JAR by simply double-clicking on the JAR file so you may need to open your Terminal window and execute it from the command line by executing the jar file *without any arguments or flags*:

```
java -jar /path/to/ScriptManager.jar
```

If you're not sure how to type the path to ScriptManager, you can type `java -jar ` (end with space) and then drag ScriptManager from Finder into your Terminal window and then press enter.
:::

  </TabItem>
  <TabItem value="linux" label="Linux">

Double-click or right-click the ScriptManager JAR file to start the program.

<div class="tutorial-img-flow-container">
  <img src={require('/static/md-img/General/LinuxOpenSM.png').default} style={{width:40+'%',border:'solid 1px'}} />
</div>


  </TabItem>
  <TabItem value="windows" label="Windows">

Double-click or right-click the ScriptManager JAR file to start the program.

<div class="tutorial-img-flow-container">
  <img src={require('/static/md-img/General/WindowsOpenSM.png').default} style={{width:40+'%',border:'solid 1px'}} />
</div>


  </TabItem>
</Tabs>

Once you see the main tool selection window, you're off to the races!

### 2. Generate BAI index file
A BAI index file is required for each BAM file of interest (i.e., the tag occupancy data you want to plot). This file allows for rapid access of the sorted and aligned sequence reads (BAM file).

#### 2.1. Navigate to BAM Manipulation ➡️ [__BAM-BAI Indexer__][bam-indexer]

<div class="tutorial-img-flow-container">
  <img src={require('./img/maingui-bamidx.png').default} style={{width:60+'%',}} />
</div>

#### 2.2. Generate BAI index files for each BAM file of interest by loading your BAM file and clicking "Index."

<div class="tutorial-img_atacseq-flow-container">
  <img src={require('./img_atacseq/bamid.png').default} style={{width:60+'%',}}/>
  <i class="fa-solid fa-arrow-right fa-lg"></i>
  <img src={require('./img_atacseq/gui-expandbed-complete.png').default} style={{width:30+'%',}}/>
</div>

:::note
The speed of this step scales with the size of the BAM file. Generally this step 30 sec for a 100 MB BAM file but may take 1-2 min for a multi-GB BAM file. (228,000,000 tags processed)
:::

### 3. BAM File Statistics
The BAM File Statistics is a Quality Control feature that includes alignment statistis that can be used to check what the data looks like. 

#### 3.1. Navigate to BAM Statistics ➡️ [__BAM-Statistics__][bam-statistics] 
<div class="tutorial-img_atacseq-flow-container">
  <img src={require('./img_atacseq/bamstatistics(1).png').default} style={{width:60+'%',}} />
</div>

#### 3.2. Select Output Statistics 
<div class="tutorial-img_atacseq-flow-container">
  <img src={require('./img_atacseq/bamstats(2).png').default} style={{width:60+'%',}}/>
  <img src={require('./img_atacseq/bamstatsfile.png').default} style={{width:60+'%',}}/>
</div>

### 4. Resize the BED file
The BED file is the set of reference coordinates that your heatmap and composite plots will be aligned to, but you’ll need to specify how far upstream and downstream you want your data to be plotted; i.e., “Size of Expansion (bp). If you bed file is defined by more than a 1 bp interval AND you want to add to limits of that interval, then select  “Add to Border”).

#### 4.1. Navigate to Coordinate File Manipulation ➡️ [__Expand BED File__][expand-bed]

<div class="tutorial-img-flow-container">
  <img src={require('./img/maingui-expandbed.png').default} style={{width:60+'%',}}/>
</div>


#### 4.2. For this tutorial, use the 5000bp expansion and select "Expand from Center".

<div class="tutorial-im_atacseq_-flow-container">
  <img src={require('./img/gui-expandbed.png').default} style={{width:60+'%',}}/>
  <i class="fa-solid fa-arrow-right fa-lg"></i>
  <img src={require('./img/gui-expandbed-complete.png').default} style={{width:30+'%',}}/>
</div>

:::tip
BED file coordinates often need to be resized for more informative tag pileups. This tutorial is on Humans (Homo Sapiens), so it requires a larger window of 5000 bp due to the amount of indirect-crosslinking. 
:::


### 5. Generate the tag pileup
Use TagPileup to pileup the BAM data within a set of BED coordinate windows to generate the composite plot and the matrix(CDT) files that will be used to generate the heatmaps.

#### 5.1. Navigate to Sequence Read Analysis ➡️ [__Tag Pileup__][tag-pileup]

<div class="tutorial-img-flow-container">
  <img src={require('./img/maingui-tagpileup.png').default} style={{width:60+'%',}}/>
</div>

#### 5.2. Load the BED and BAM files

#### 5.3. Use Full Fragment in the top right, & make sure "CDT" and "Output GZIP" are selected in the bottom left

+ Bioinformatic projects should be organized in a uniform and consistent manner as described below

+ [Paper on how to organize bioinformatics projects (Noble 2009)][noble2009]

<div class="tutorial-img-flow-container">
  <img src={require('./img/gui-tagpileup.png').default} style={{width:100+'%',}}/>
</div>

#### 5.4. When ready, select ‘Pile Tags’ to execute

:::tip
The default parameters Tag Pileup is set to expect is a sequence-specific strand separated ChIP-exo dataset. Modifications to these parameters are needed for more specific analysis or when using data generated from other assays.
:::

#### 5.5. Save composite results as PNG

<div class="tutorial-img-flow-container">
  <img src={require('./img/gui-tagpileup-out.png').default} style={{width:100+'%',}}/>
</div>

+ The displayed composite plot can be modified by right-clicking and selecting properties. Things such as axis labels, axis range, and colors can be modified here.

+ The final image can then be saved by right-clicking and selecting ‘Save as’. PNG is fine for most cases, but SVG is strongly recommended if this composite plot will be used in Adobe Illustrator later.

:::note
Besides the composite plot image, ScriptManager has saved the matrix \*.CDT files to your Output Directory together with the composite plot values file (If you didn't change the name it would be called `composite_average.out`). These CDT files will be used as the input for generating heatmaps in the next step.
:::

### 6. Sort BED file by CDT file

#### 6.1. Navigate to Coordinate File Manipulation ➡️ [__Sort-BED__][sort-BED].
**IMAGE 

#### 6.2. Load BED & CDT File from Tag Pileup
**IMAGE w/drawn circle of this specified action 

#### 6.3. Change Expansion Size to 1000 from Center 

#### 6.4. Select Base Output File Name for sorted BED & CDT Files 

### 7. Generate Heatmaps


#### 7.1. Navigate to Figure Generation ➡️ [__Two-Color HeatMap__][heatmap].

<div class="tutorial-img-flow-container">
  <img src={require('./img/maingui-heatmap.png').default} style={{width:60+'%',}}/>
</div>

#### 7.2. Load the Sorted CDT File and select "`_sense.cdt`" output CDT files from runnung the TagPileup step.

#### 7.3. For color, select "Custom" 

#### 7.4. Change the Contact Threshold to "Percentile Value" 

::: note
The heatmaps for this dataset show the best contrast when using the default "Percentile Threshold" value (.95 or 95%).  Otherwise your heatmaps will come out too light or too dark to see the shape.

#### 7.4. Check Output Heatmap to output gigure to a Local Directory

#### 7.7. Click "Generate" to save your Sense PNG heatmap!

<div class="tutorial-img-flow-container">
  <img src={require('./img/gui-heatmap-sense.png').default} style={{width:40+'%',}}/>
  <i class="fa-solid fa-arrow-right fa-lg"></i>
  <img src={require('./img/gui-heatmap-sense-out.png').default} style={{width:40+'%',}}/>
</div>


:::tip
"Percentile Threshold" is a useful for looking at the shape of ChIP-exo binding patterns while "Absolute Threshold" is useful for setting a shared contrast threshold across several samples and comparing signal density. For other data, you may need to play around with settings to find the right contrast for you data.
:::



## General Comments
Bioinformatic projects should be organized in a uniform and consistent manner so that you can easily find them in the future. Consider the organizational structure described in [__Noble, 2009__][noble-paper].


## Command-Line shell script

The following shell commands records the locations for a BED file, a BAM file, and the anticipated OUTPUT basename as environmental variables to derive the corresponding composite plot values and heatmaps. This can serve as a template for you to write out your own workflows as bash scripts that execute command-line style ScriptManager.

```bash
SCRIPTMANAGER=/path/to/ScriptManager.jar
BEDFILE=/path/to/Reb1_Rhee_primary_sites_975.bed
BAMFILE=/path/to/12141_filtered.bam
OUTPUT=/path/to/myoutput

samtools index $BAMFILE
java -jar $SCRIPTMANAGER coordinate-manipulation expand-bed -c 250 $BEDFILE -o BED_250bp.bed
java -jar $SCRIPTMANAGER read-analysis tag-pileup $BEDFILE $BAMFILE -o $OUTPUT\_composite.out -M $OUTPUT\_matrix
java -jar $SCRIPTMANAGER figure-generation heatmap -p .95 --blue $OUTPUT\_matrix_sense.cdt -o SENSE.png
java -jar $SCRIPTMANAGER figure-generation heatmap -p .95 --red $OUTPUT\_matrix_anti.cdt -o ANTI.png
java -jar $SCRIPTMANAGER figure-generation merge-heatmap SENSE.png ANTI.png -o $OUTPUT\_heatmap.png
java -jar $SCRIPTMANAGER figure-generation label-heatmap $OUTPUT\_heatmap.png \
  -x "Reb1" -y "Reb1_Rhee_primary_sites_975" -l -250 -m 0 -r +250 -o $OUTPUT\_heatmap.svg

rm BED_250bp.bed SENSE.png ANTI.png

# Output files:
#  - /path/to/myoutput_composite.out
#  - /path/to/myoutput_matrix_sense.cdt
#  - /path/to/myoutput_matrix_anti.cdt
#  - /path/to/myoutput_heatmap.png
```

[noble-paper]:https://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1000424&type=printable
[yep-data]:ftp://data1.commons.psu.edu/pub/commons/eberly/pughlab/yeast-epigenome-project
[yep-stencil]:http://www.yeastepigenome.org/
[rossi-2018]:https://pubmed.ncbi.nlm.nih.gov/29563167/
[rossi-2021]:https://pubmed.ncbi.nlm.nih.gov/33692541/
[saccer3cegr-fasta]:https://github.com/CEGRcode/GenoPipe/blob/master/EpitopeID/utility_scripts/genome_data/download_sacCer3_Genome.sh
[noble2009]:https://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1000424&type=printable
[github-repo]:https://www.github.com/CEGRcode/scriptmanager
[github-v14]:https://github.com/CEGRcode/scriptmanager/releases/download/v0.14/ScriptManager-v0.14.jar
[ex-chipexo-bash]:https://www.github.com/CEGRcode/scriptmanager

[java-install]:/docs/#java
[encode-project]:(https://www.encodeproject.org/experiments/ENCSR868FGK/)


[bam-indexer]:/docs/Tools/bam-manipulation/bam-indexer
[expand-bed]:/docs/Tools/coordinate-manipulation/expand-bed
[tag-pileup]:/docs/Tools/read-analysis/tag-pileup
[heatmap]:/docs/Tools/figure-generation/heatmap
[merge-heatmap]:/docs/Tools/figure-generation/merge-heatmap
[label-heatmap]:/docs/Tools/figure-generation/heatmap-labeler

[file-formats]:/docs/Guides/Getting-Started/file-formats

[bam-statistics]:https://pughlab.mbg.cornell.edu/scriptmanager-docs/docs/Tools/bam-statistics/

[sort-BED]:https://pughlab.mbg.cornell.edu/scriptmanager-docs/docs/Tools/coordinate-manipulation/sort-bed
